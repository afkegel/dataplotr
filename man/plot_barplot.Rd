% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_barplot.R
\name{plot_barplot}
\alias{plot_barplot}
\title{Draws barplots.}
\usage{
plot_barplot(data_frame, main_title = NULL, bar_width = NULL,
  x_title = ggplot2::waiver(), y_title = ggplot2::waiver(), x_var, y_var,
  x_limits = NULL, y_limits = NULL, x_breaks = ggplot2::waiver(),
  y_breaks = ggplot2::waiver(), y_facet = FALSE, label_vars = FALSE,
  percentage = FALSE, color_vars = NULL, fill_vars = NULL,
  colour_palette = FALSE, fill_palette = FALSE, pos = "dodge",
  barplot_alpha = 1, colour_title = FALSE, fill_title = FALSE,
  legend_labels = ggplot2::waiver(), legend_pos = c(1, 1),
  legend_rev = FALSE, legend_col = "#E5E2E0", keysize = 0.7,
  text_col = black_seq[8], basesize = 12, flip = FALSE)
}
\arguments{
\item{data_frame:}{A data frame}

\item{main_title:}{Title of the barplot, defaults to NULL.}

\item{bin_width:}{Width of the bars, defaults to NULL.}

\item{text_col:}{Text colour, defaults to black_seq[8]}

\item{basesize:}{Text basesize, defaults to 12}

\item{flip:}{Flips x-axis and y-axis if TRUE, defaults to FALSE}

\item{x_title:}{X-axis title, string in quotations, e.g., "Year Level"}

\item{x_var:}{X-axis variable, has to be a factor}

\item{x_limits:}{Scale limits, e.g., c(4,10) for a year level variable}

\item{x_breaks:}{Breaks, e.g., c(4, 6, 9) for a year level variable}

\item{y_title:}{Y-axis title, string in quotations, e.g., "Percentage of 
Blocks"}

\item{y_var:}{Y-axis variable}

\item{y_limits:}{Scale limits, e.g., c(0, 1) for a percentage variable}

\item{y_breaks:}{Breaks, e.g., c(0, 0.5, 1) for a percentage variable}

\item{y_facet:}{A grid for the y-variable controlled via a formula in 
quotations e.g., "SCHOOL ~ ." to have the y-variable sliced horizontally 
by a school name variable, or ". ~ SCHOOL" to have the y-variable sliced 
vertically by a school name variable. Defaults to FALSE.}

\item{label_vars:}{A variable for bar labels, e.g, 
label_vars="percent(FREQ)"}

\item{percentage:}{whether the quantitative variable should have percentage
labels}

\item{color_vars:}{variable by which to cross the x-variable, used for 
colouring the bars, has to be factor}

\item{fill_vars:}{variable by which to cross the x-variable, used for 
filling the bars, has to be factor}

\item{colour_palette:}{palette values for scale_colour, defaults to 
colour_brewer}

\item{fill_palette:}{palette values for scale_fill, defaults to fill_brewer}

\item{pos:}{position of boxplot, default at "dodge"}

\item{barplot_alpha:}{degree of transparency of barplot, default at 1


legend arguments}

\item{colour_title:}{legend guide for scale_colour, setting a title 
activates the legend, defaults to FALSE.}

\item{fill_title:}{legend guide for scale_fill, setting a title activates 
the legend, default at FALSE.}

\item{legend_labels:}{a vector of labels for the legend, e.g, 
c("M\\u0101ori", "Pakeh\\u0101")}

\item{legend_pos:}{legend positions, takes a string ("top", "bottom", 
"right", "left"), or a vector of two numbers between 0 and 1, indicating 
the relative x and y positions.}

\item{legend_rev:}{determines whether the order of the legend labels should
be reversed}

\item{legend_col:}{legend background colour, default at "#E5E2E0" keysize: 
size of the legend}
}
\value{
a bar plot object
}
\description{
Draws barplots.
}
\section{Bugs}{
 Guide colour and guide fill currently take the same 
  arguments and can not be controlled individually.
  
  Labels don't look good with position = "stack"
}

\examples{

  #Simple bar plot
  p <- plot_barplot(iris,
                    x_var = "Species",
                    y_var = "Sepal.Length")
  plot(p)

  #Same bar plot with colour by Species
  p <- plot_barplot(iris,
                    x_var = "Species",
                    y_var = "Sepal.Length",
                    fill_title = "Species",
                    fill_vars = "Species",
                    color_vars = "Species")
  plot(p)

  #Same bar plot with a facet for Sepal.Width and a legend with a title
  p <- plot_barplot(iris,
                    x_var = "Species",
                    y_var = "Sepal.Length",
                    fill_vars = "Species",
                    y_facet = "Sepal.Width ~ .",
                    fill_title = "Species",
                    flip = TRUE)
  plot(p)

}
